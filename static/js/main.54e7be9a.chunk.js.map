{"version":3,"sources":["components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/LandingPage/Sections/GridCard.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetailPage/Sections/Favorite.js","components/views/MovieDetailPage/MovieDetailPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_KEY","API_URL","IMAGE_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","Title","Typography","MainImage","style","background","image","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","level","title","fontSize","text","GridCard","lg","md","xs","href","movieId","alt","src","LandingPage","useState","Movies","setMovies","CurrentPage","setCurrentPage","endpoint","fetchMovies","path","fetch","json","console","log","results","page","margin","backdrop_path","original_title","overview","gutter","map","movie","index","Fragment","key","poster_path","id","display","justifyContent","onClick","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","Item","prefix","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","flexDirection","alignItems","Favorite","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","variable","userFrom","movieTitle","movieInfo","movieImage","movieRunTime","runtime","favoriteNumber","favorited","open","MovieDetailPage","match","params","Movie","setMovie","Crews","setCrews","ActorToggle","setActorToggle","cast","bordered","release_date","revenue","vote_average","vote_count","popularity","crew","profile_path","actor","App","fallback","paddingTop","minHeight","exact","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54e7be9a.chunk.js","sourcesContent":["//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n\r\nexport const API_KEY =  '4d44410f0c85a223cd2f7babe6d329b4';\r\n\r\nexport const API_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n"," import React from 'react'\r\n import { Typography } from 'antd';\r\n const  { Title } = Typography;\r\n\r\n\r\n function MainImage(props) {\r\n\r\n\r\nreturn( \r\n<div\r\n    style={{\r\n        background:\r\n            `linear-gradient(to bottom, rgba(0,0,0,0)\r\n    39%,rgba(0,0,0,0)\r\n    41%,rgba(0,0,0,0.65)\r\n    100%),\r\n    url('${props.image}'), #1c1c1c`,\r\n        height: '500px',\r\n        backgroundSize: '100%, cover',\r\n        backgroundPosition: 'center, center',\r\n        width: '100%',\r\n        position: 'relative'\r\n    }}>\r\n     <div>\r\n                <div style={{ position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem' }} >\r\n                    <Title style={{ color: 'white' }} level={2} >{props.title} </Title>\r\n                    <p style={{ color: 'white', fontSize: '1rem' }}  >{props.text}</p>\r\n                </div>\r\n            </div>\r\n    </div>\r\n    \r\n    )\r\n }\r\n\r\n\r\n\r\n export default MainImage","import React from 'react'\r\nimport { Col } from 'antd'\r\n\r\nfunction GridCard(props){\r\n\r\n\r\n    return(\r\n        <Col lg={6} md={8} xs={24} >\r\n            <div style={{position: 'relative'}}>\r\n\r\n                <a href = {`/movie/${props.movieId}`}>\r\n                    <img style={{width: '100%', height: '320px'}}  alt=\"img\" src={props.image} />\r\n                    </a>\r\n            </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nexport default GridCard\r\n","import React, { useEffect , useState } from 'react'\r\n\r\nimport { API_URL , API_KEY , IMAGE_URL} from \"../../Config\"\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport MainImage from './Sections/MainImage'\r\n\r\nimport GridCard from './Sections/GridCard'\r\n\r\nimport { Typography , Row} from 'antd';\r\nconst  { Title } = Typography;\r\n\r\n\r\nfunction LandingPage() {\r\n\r\n   const [Movies , setMovies ] = useState([]);\r\n   const [CurrentPage , setCurrentPage] = useState(0)\r\n\r\n    useEffect(() => {\r\n\r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&languages=en=US&page=1`\r\n        fetchMovies(endpoint)\r\n    }, [])\r\n\r\n    const fetchMovies =  (path) => {\r\n\r\n        fetch(path)\r\n            .then(response=> response.json())\r\n            .then(response => {\r\n                console.log(response)\r\n                setMovies([...Movies, ...response.results] )\r\n                setCurrentPage(response.page)\r\n\r\n            })\r\n    }\r\n\r\n    const handleClick = () => {\r\n\r\n        const endpoint =  `${API_URL}movie/popular?api_key=${API_KEY}&languages=en=US&page=${CurrentPage + 1 }`\r\n\r\n\r\n        fetchMovies(endpoint);\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', margin: '0' }}>\r\n            \r\n            {/* //Movie main image */}\r\n\r\n            {Movies[0] &&\r\n            <MainImage image={`${IMAGE_URL}w1280${Movies[0].backdrop_path && Movies[0].backdrop_path}` }\r\n             title={Movies[0].original_title}  text={Movies[0].overview}/>  \r\n            }\r\n\r\n        {/* Movie BODY  */}\r\n        <div style ={{ width: '85%' , margin: '1rem auto'}} >\r\n            <Title level={2} >Movies by latest </Title>\r\n            <hr />\r\n        \r\n        {/* grid cards */}\r\n        <Row gutter={[16,16]}>\r\n            {Movies && Movies.map((movie,index) =>(\r\n                <React.Fragment key={index}>\r\n                    \r\n                    <GridCard  \r\n                        image={movie.poster_path && `${IMAGE_URL}w500${movie.poster_path}`}\r\n                        movieId={movie.id}\r\n                        />\r\n                </React.Fragment>\r\n\r\n            ))}\r\n        </Row>\r\n\r\n        {/* load more button */}\r\n        <br />\r\n        <div style ={{ display: 'flex' , justifyContent: 'center'}} >\r\n\r\n            <button onClick={handleClick}> Load more</button>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                  </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Name is required'),\r\n        lastName: Yup.string()\r\n          .required('Last Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React from 'react';\r\nimport { Menu } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n    <Menu.Item key=\"mail\">\r\n      <a href=\"/\">Home</a>\r\n    </Menu.Item>\r\n    <SubMenu title={<span>Blogs</span>}>\r\n      <MenuItemGroup title=\"Item 1\">\r\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n      </MenuItemGroup>\r\n      <MenuItemGroup title=\"Item 2\">\r\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n  </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Menu } from 'antd';\r\nimport axios from 'axios';\r\nimport { USER_SERVER } from '../../../Config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector(state => state.user)\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then(response => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert('Log Out Failed')\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">Signin</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">Signup</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"logout\">\r\n          <a onClick={logoutHandler}>Logout</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n\r\n","import React, { useState } from 'react';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport { Drawer, Button, Icon } from 'antd';\r\nimport './Sections/Navbar.css';\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true)\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  };\r\n\r\n  return (\r\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">Logo</a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport {Icon} from 'antd';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{\r\n            height: '80px', display: 'flex',\r\n            flexDirection: 'column', alignItems: 'center',\r\n            justifyContent: 'center', fontSize:'1rem'\r\n        }}>\r\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React , {useEffect , useState} from 'react'\r\nimport axios from 'axios';\r\nimport { Button } from 'antd';\r\n\r\nfunction Favorite(props){\r\n\r\n    const [FavoriteNumber, setFavoriteNumber] = useState(0)\r\n    const [Favorited, setFavorited] = useState(false)\r\n\r\n\r\n    const variable  = {\r\n        userFrom: props.userFrom,\r\n        movieId: props.movieId,\r\n        movieTitle: props.movieInfo.original_title,\r\n        movieImage: props.movieInfo.backdrop_path,\r\n        movieRunTime: props.movieInfo.runtime\r\n    }\r\n    const raiseInvoiceClicked = () => {\r\n        const url = 'https://www.gv.com.sg/GVBuyTickets#/';\r\n        window.open(url, '_blank');\r\n    }\r\n    const onClickFavorite = () => {\r\n        if(Favorited) {\r\n// if already aDDED\r\n                axios.post('/api/favorite/removeFromFavorite', variable)\r\n                .then(response => {\r\n                    if(response.data.success){\r\n                        setFavoriteNumber( FavoriteNumber - 1)\r\n                        setFavorited(!Favorited)\r\n                }\r\n                else{\r\n                    alert('Failed to remove from  Favorite')\r\n\r\n                }\r\n\r\n                })\r\n        } else {\r\n\r\n            axios.post('/api/favorite/addToFavorite', variable)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    setFavoriteNumber( FavoriteNumber + 1)\r\n                    setFavorited(!Favorited)\r\n            }\r\n            else{\r\n                alert('Failed to get the Favorite')\r\n\r\n            }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n\r\n        axios.post('/api/favorite/favoriteNumber', variable)\r\n            .then(response =>{\r\n                if(response.data.success){\r\n                    setFavoriteNumber( response.data.favoriteNumber )\r\n                } else{\r\n                    alert('Failed to get the Favorite Number')\r\n                }\r\n            })\r\n\r\n            // API to get favorite\r\n        axios.post('/api/favorite/favorited', variable)\r\n            .then(response =>{\r\n                if(response.data.success){\r\n                    setFavorited( response.data.favorited )\r\n                } else{\r\n                    alert('Failed to get the Favorite Info');\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n             <button onClick={onClickFavorite} >{Favorited ? \"remove from favorite \" : \"add to favorite\"} {FavoriteNumber}</button>\r\n             <button  onClick={raiseInvoiceClicked}>BUY TICKETS</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorite;","import React , {useEffect , useState} from 'react'\r\nimport { API_URL , API_KEY , IMAGE_URL} from \"../../Config\"\r\nimport MainImage from '../LandingPage/Sections/MainImage'\r\nimport {Descriptions , Button , Row} from 'antd';\r\nimport Favorite from './Sections/Favorite';\r\n\r\nimport GridCard from '../LandingPage/Sections/GridCard'\r\n\r\nfunction MovieDetailPage(props) {\r\n    const movieId = props.match.params.movieId\r\n    const [Movie , setMovie] = useState([])\r\n    const [Crews , setCrews] = useState([])\r\n    const [ActorToggle ,setActorToggle] = useState(false)\r\n\r\n    useEffect(() =>{\r\n\r\n        // to get the Movie Id of a particular movieId\r\n     \r\n\r\n        fetch(`${API_URL}movie/${movieId}?api_key=${API_KEY}&languages=en=US`)\r\n            .then(response => response.json())\r\n            .then(response =>{\r\n\r\n                setMovie(response)\r\n\r\n                // Crew Info \r\n                fetch(`${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`)\r\n                .then(response => response.json())\r\n                .then(response =>{ \r\n                    setCrews(response.cast)\r\n                })\r\n\r\n            })\r\n\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n\r\n        setActorToggle(!ActorToggle)\r\n    }\r\n\r\n    return(\r\n\r\n        <div>\r\n            {Movie[0] &&\r\n            <MainImage image={`${IMAGE_URL}w1280${Movie[0].backdrop_path && Movie[0].backdrop_path}` }\r\n             title={Movie[0].original_title}  text={Movie[0].overview}/>  \r\n            }\r\n            \r\n       \r\n\r\n  <div style ={{ width: '85%' , margin: '1rem auto'}} >\r\n        <div style ={{ display: 'flex' , justifyContent: 'flex-end'}}>\r\n           <Favorite  userFrom={localStorage.getItem('userId')} movieId={movieId} movieInfo={Movie}/>  \r\n        </div>\r\n  {/* Movie Info table  */}\r\n\r\n    <Descriptions title=\"Movie Info\" bordered>\r\n        <Descriptions.Item label=\"Title\">{Movie.original_title}</Descriptions.Item>\r\n        <Descriptions.Item label=\"release_date\">{Movie.release_date}</Descriptions.Item>\r\n        <Descriptions.Item label=\"revenue\">{Movie.revenue}</Descriptions.Item>\r\n        <Descriptions.Item label=\"runtime\">{Movie.runtime}</Descriptions.Item>\r\n        <Descriptions.Item label=\"vote_average\" span={2}>\r\n        {Movie.vote_average}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"vote_count\">{Movie.vote_count}</Descriptions.Item>\r\n        <Descriptions.Item label=\"status\">{Movie.status}</Descriptions.Item>\r\n        <Descriptions.Item label=\"popularity\">{Movie.popularity}</Descriptions.Item>\r\n    </Descriptions>\r\n            \r\n         <br /><br />   \r\n        <div style ={{ display: 'flex' , justifyContent: 'center'}} >\r\n            <Button onClick={handleClick}>Toggle ACTOR</Button>\r\n        </div>\r\n    \r\n    {/* GRID CARD FOR CREW INFO */}\r\n\r\n    { ActorToggle &&\r\n    <Row gutter={[16,16]}>\r\n    {Crews && Crews.map((crew,index) =>(\r\n        <React.Fragment key={index}>\r\n            \r\n           {crew.profile_path &&\r\n            <GridCard  \r\n            actor image={`${IMAGE_URL}w500${crew.profile_path}`}\r\n            />\r\n            }\r\n        </React.Fragment>\r\n\r\n    ))}\r\n</Row>\r\n    \r\n    }\r\n    \r\n    </div>\r\n\r\n    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetailPage","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\"\r\nimport MovieDetailPage from './views/MovieDetailPage/MovieDetailPage.js';\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/movie/:movieId\" component={Auth(MovieDetailPage, null)} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}